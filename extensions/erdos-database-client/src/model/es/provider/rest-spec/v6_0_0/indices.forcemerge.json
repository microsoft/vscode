{
  "indices.forcemerge": {
    "documentation": "http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-forcemerge.html",
    "methods": ["POST"],
    "url": {
      "path": "/_forcemerge",
      "paths": ["/_forcemerge", "/{index}/_forcemerge"],
      "parts": {
        "index": {
          "type" : "list",
          "description" : "A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices"
        }
      },
      "params": {
        "flush": {
          "type" : "boolean",
          "description" : "Specify whether the index should be flushed after performing the operation (default: true)"
        },
        "ignore_unavailable": {
            "type" : "boolean",
            "description" : "Whether specified concrete indices should be ignored when unavailable (missing or closed)"
        },
        "allow_no_indices": {
            "type" : "boolean",
            "description" : "Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)"
        },
        "expand_wildcards": {
            "type" : "enum",
            "options" : ["open","closed","none","all"],
            "default" : "open",
            "description" : "Whether to expand wildcard expression to concrete indices that are open, closed or both."
        },
        "max_num_segments": {
          "type" : "number",
          "description" : "The number of segments the index should be merged into (default: dynamic)"
        },
        "only_expunge_deletes": {
          "type" : "boolean",
          "description" : "Specify whether the operation should only expunge deleted documents"
        },
        "operation_threading": {
          "description" : "TODO: ?"
        },
        "wait_for_merge": {
          "type" : "boolean",
          "description" : "Specify whether the request should block until the merge process is finished (default: true)"
        }
      }
    },
    "body": null
  }
}

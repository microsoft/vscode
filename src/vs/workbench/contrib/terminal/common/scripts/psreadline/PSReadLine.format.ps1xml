<Configuration>
  <ViewDefinitions>
    <View>
      <Name>PSReadLine-KeyBindings</Name>
      <ViewSelectedBy>
        <TypeName>Microsoft.PowerShell.KeyHandler</TypeName>
      </ViewSelectedBy>
      <GroupBy>
        <PropertyName>Group</PropertyName>
        <CustomControl>
          <CustomEntries>
            <CustomEntry>
              <CustomItem>
                <ExpressionBinding>
                  <ScriptBlock>
$d = [Microsoft.PowerShell.KeyHandler]::GetGroupingDescription($_.Group)
"{0}`n{1}" -f $d,('='*$d.Length)
</ScriptBlock>
                </ExpressionBinding>
              </CustomItem>
            </CustomEntry>
          </CustomEntries>
        </CustomControl>
      </GroupBy>
      <TableControl>
        <TableHeaders>
          <TableColumnHeader>
            <Label>Key</Label>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Function</Label>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Description</Label>
          </TableColumnHeader>
        </TableHeaders>
        <TableRowEntries>
          <TableRowEntry>
            <Wrap/>
            <TableColumnItems>
              <TableColumnItem>
                <PropertyName>Key</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>Function</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>Description</PropertyName>
              </TableColumnItem>
            </TableColumnItems>
          </TableRowEntry>
        </TableRowEntries>
      </TableControl>
    </View>
    <View>
      <Name>PSReadLine-HistoryItem</Name>
      <ViewSelectedBy>
        <TypeName>Microsoft.PowerShell.PSConsoleReadLine+HistoryItem</TypeName>
      </ViewSelectedBy>
      <ListControl>
        <ListEntries>
          <ListEntry>
            <ListItems>
              <ListItem>
                <PropertyName>CommandLine</PropertyName>
              </ListItem>
              <ListItem>
                <ItemSelectionCondition><ScriptBlock>$_.StartTime.Ticks -ne 0</ScriptBlock></ItemSelectionCondition>
                <Label>StartTime</Label>
                <ScriptBlock>$_.StartTime.ToLocalTime()</ScriptBlock>
              </ListItem>
              <ListItem>
                <ItemSelectionCondition><ScriptBlock>$_.ApproximateElapsedTime.Ticks -ne 0</ScriptBlock></ItemSelectionCondition>
                <PropertyName>ApproximateElapsedTime</PropertyName>
              </ListItem>
            </ListItems>
          </ListEntry>
        </ListEntries>
      </ListControl>
    </View>
    <View>
      <Name>PSReadLine-Options</Name>
      <ViewSelectedBy>
        <TypeName>Microsoft.PowerShell.PSConsoleReadLineOptions</TypeName>
      </ViewSelectedBy>
      <ListControl>
        <ListEntries>
          <ListEntry>
            <ListItems>
              <ListItem>
                <PropertyName>EditMode</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>AddToHistoryHandler</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>HistoryNoDuplicates</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>HistorySavePath</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>HistorySaveStyle</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>HistorySearchCaseSensitive</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>HistorySearchCursorMovesToEnd</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>MaximumHistoryCount</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>ContinuationPrompt</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>ExtraPromptLineCount</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>PromptText</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>BellStyle</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>DingDuration</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>DingTone</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>CommandsToValidateScriptBlockArguments</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>CommandValidationHandler</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>CompletionQueryItems</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>MaximumKillRingCount</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>ShowToolTips</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>ViModeIndicator</PropertyName>
              </ListItem>
              <ListItem>
                  <Label>ViModeChangeHandler</Label>
                  <ItemSelectionCondition><ScriptBlock>$null -ne $_.ViModeChangeHandler</ScriptBlock></ItemSelectionCondition>
                  <PropertyName>ViModeChangeHandler</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>WordDelimiters</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>AnsiEscapeTimeout</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>PredictionSource</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>PredictionViewStyle</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>TerminateOrphanedConsoleApps</PropertyName>
              </ListItem>
              <ListItem>
                <Label>CommandColor</Label>
                <ScriptBlock>[Microsoft.PowerShell.VTColorUtils]::FormatColor($_.CommandColor)</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>CommentColor</Label>
                <ScriptBlock>[Microsoft.PowerShell.VTColorUtils]::FormatColor($_.CommentColor)</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>ContinuationPromptColor</Label>
                <ScriptBlock>[Microsoft.PowerShell.VTColorUtils]::FormatColor($_.ContinuationPromptColor)</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>DefaultTokenColor</Label>
                <ScriptBlock>[Microsoft.PowerShell.VTColorUtils]::FormatColor($_.DefaultTokenColor)</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>EmphasisColor</Label>
                <ScriptBlock>[Microsoft.PowerShell.VTColorUtils]::FormatColor($_.EmphasisColor)</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>ErrorColor</Label>
                <ScriptBlock>[Microsoft.PowerShell.VTColorUtils]::FormatColor($_.ErrorColor)</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>InlinePredictionColor</Label>
                <ScriptBlock>[Microsoft.PowerShell.VTColorUtils]::FormatColor($_.InlinePredictionColor)</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>KeywordColor</Label>
                <ScriptBlock>[Microsoft.PowerShell.VTColorUtils]::FormatColor($_.KeywordColor)</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>ListPredictionColor</Label>
                <ScriptBlock>[Microsoft.PowerShell.VTColorUtils]::FormatColor($_.ListPredictionColor)</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>ListPredictionSelectedColor</Label>
                <ScriptBlock>[Microsoft.PowerShell.VTColorUtils]::FormatColor($_.ListPredictionSelectedColor)</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>ListPredictionTooltipColor</Label>
                <ScriptBlock>[Microsoft.PowerShell.VTColorUtils]::FormatColor($_.ListPredictionTooltipColor)</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>MemberColor</Label>
                <ScriptBlock>[Microsoft.PowerShell.VTColorUtils]::FormatColor($_.MemberColor)</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>NumberColor</Label>
                <ScriptBlock>[Microsoft.PowerShell.VTColorUtils]::FormatColor($_.NumberColor)</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>OperatorColor</Label>
                <ScriptBlock>[Microsoft.PowerShell.VTColorUtils]::FormatColor($_.OperatorColor)</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>ParameterColor</Label>
                <ScriptBlock>[Microsoft.PowerShell.VTColorUtils]::FormatColor($_.ParameterColor)</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>SelectionColor</Label>
                <ScriptBlock>[Microsoft.PowerShell.VTColorUtils]::FormatColor($_.SelectionColor)</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>StringColor</Label>
                <ScriptBlock>[Microsoft.PowerShell.VTColorUtils]::FormatColor($_.StringColor)</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>TypeColor</Label>
                <ScriptBlock>[Microsoft.PowerShell.VTColorUtils]::FormatColor($_.TypeColor)</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>VariableColor</Label>
                <ScriptBlock>[Microsoft.PowerShell.VTColorUtils]::FormatColor($_.VariableColor)</ScriptBlock>
              </ListItem>
            </ListItems>
          </ListEntry>
        </ListEntries>
      </ListControl>
    </View>
  </ViewDefinitions>
</Configuration>


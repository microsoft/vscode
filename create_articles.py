#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã—Ö HTML —Å—Ç–∞—Ç–µ–π —Å —Ç–µ—Å—Ç–∞–º–∏ —á–µ—Ä–µ–∑ OpenRouter API
–ò—Å–ø–æ–ª—å–∑—É–µ—Ç –º–æ–¥–µ–ª—å anthropic/claude-3-5-sonnet-20240620
"""

import os
import sys
import json
import time
import uuid
import random
import string
import requests
from pathlib import Path
from typing import List, Dict, Optional


class OpenRouterClient:
    """–ö–ª–∏–µ–Ω—Ç –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å OpenRouter API"""
    
    def __init__(self, api_key: str):
        self.api_key = api_key
        self.base_url = "https://openrouter.ai/api/v1/chat/completions"
        self.model = "anthropic/claude-3-5-sonnet-20240620"
        self.session = requests.Session()
        self.session.headers.update({
            "Authorization": f"Bearer {api_key}",
            "HTTP-Referer": "https://github.com/microsoft/vscode",
            "X-Title": "VSCode Article Generator",
            "Content-Type": "application/json"
        })
    
    def generate_article(self, topic: str, max_retries: int = 3) -> Optional[str]:
        """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —Å—Ç–∞—Ç—å—é –ø–æ –∑–∞–¥–∞–Ω–Ω–æ–π —Ç–µ–º–µ —Å –ø–æ–≤—Ç–æ—Ä–Ω—ã–º–∏ –ø–æ–ø—ã—Ç–∫–∞–º–∏"""
        prompt = self._create_prompt(topic)
        
        for attempt in range(max_retries):
            try:
                response = self.session.post(
                    self.base_url,
                    json={
                        "model": self.model,
                        "messages": [{"role": "user", "content": prompt}],
                        "max_tokens": 8000,
                        "temperature": 0.7
                    },
                    timeout=120
                )
                response.raise_for_status()
                
                data = response.json()
                if "choices" in data and len(data["choices"]) > 0:
                    return data["choices"][0]["message"]["content"]
                else:
                    print(f"‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –æ—Ç–≤–µ—Ç–∞ API (–ø–æ–ø—ã—Ç–∫–∞ {attempt + 1})")
                    
            except requests.exceptions.RequestException as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ API –∑–∞–ø—Ä–æ—Å–∞ (–ø–æ–ø—ã—Ç–∫–∞ {attempt + 1}): {e}")
                if attempt < max_retries - 1:
                    time.sleep(2 ** attempt)  # –≠–∫—Å–ø–æ–Ω–µ–Ω—Ü–∏–∞–ª—å–Ω–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞
                    
        return None
    
    def _create_prompt(self, topic: str) -> str:
        """–°–æ–∑–¥–∞–µ—Ç –ø—Ä–æ–º–ø—Ç –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Å—Ç–∞—Ç—å–∏"""
        return f"""–°–æ–∑–¥–∞–π –ü–û–õ–ù–£–Æ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—É—é HTML —Å—Ç–∞—Ç—å—é –Ω–∞ —Ç–µ–º—É: "{topic}"

–û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–´–ï –¢–†–ï–ë–û–í–ê–ù–ò–Ø –ö –°–¢–†–£–ö–¢–£–†–ï:

1. –°—Ç–∞—Ç—å—è –¥–æ–ª–∂–Ω–∞ —Å–æ–¥–µ—Ä–∂–∞—Ç—å 5-8 –≥–ª–∞–≤ –≤ <div class="chapter">
2. –í –ö–ê–ñ–î–û–ô –≥–ª–∞–≤–µ –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û –í–°–ï 4 —Ç–∏–ø–∞ –±–ª–æ–∫–æ–≤:
   - <div class="info-block">üìù <strong>–í–∞–∂–Ω–æ –∑–Ω–∞—Ç—å:</strong> [—Ç–µ–∫—Å—Ç]</div>
   - <div class="date-box">üìÖ <strong>–ò–Ω—Ç–µ—Ä–µ—Å–Ω—ã–π —Ñ–∞–∫—Ç:</strong> [—Ç–µ–∫—Å—Ç]</div>
   - <div class="fact-box">üî¢ <strong>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:</strong> [—Ç–µ–∫—Å—Ç]</div>
   - <div class="special-box">‚≠ê <strong>–û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç—å:</strong> [—Ç–µ–∫—Å—Ç]</div>

3. –ü–æ—Å–ª–µ –∫–∞–∂–¥–æ–π –≥–ª–∞–≤—ã - —Ç–µ—Å—Ç —Å 4 –≤–∞—Ä–∏–∞–Ω—Ç–∞–º–∏ –æ—Ç–≤–µ—Ç–æ–≤ –≤ —Ñ–æ—Ä–º–∞—Ç–µ:
   <div class="quiz-container" data-question="{{NUMBER}}">
     <h4>–í–æ–ø—Ä–æ—Å {{NUMBER}}</h4>
     <p>[—Ç–µ–∫—Å—Ç –≤–æ–ø—Ä–æ—Å–∞]</p>
     <div class="quiz-options">
       <label><input type="radio" name="q{{NUMBER}}" value="0"> [–≤–∞—Ä–∏–∞–Ω—Ç 1]</label>
       <label><input type="radio" name="q{{NUMBER}}" value="1"> [–≤–∞—Ä–∏–∞–Ω—Ç 2]</label>
       <label><input type="radio" name="q{{NUMBER}}" value="2"> [–≤–∞—Ä–∏–∞–Ω—Ç 3]</label>
       <label><input type="radio" name="q{{NUMBER}}" value="3"> [–≤–∞—Ä–∏–∞–Ω—Ç 4]</label>
     </div>
   </div>

4. –ü–û–õ–ù–´–ô HTML –¥–æ–∫—É–º–µ–Ω—Ç —Å:
   - –ü—Ä–∞–≤–∏–ª—å–Ω—ã–º DOCTYPE, html, head, body
   - CSS —Å—Ç–∏–ª—è–º–∏ –¥–ª—è .interactive-container –∏ –≤—Å–µ—Ö –∫–ª–∞—Å—Å–æ–≤
   - JavaScript –¥–ª—è –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä–∞ –∏ –ø–æ–¥—Å—á–µ—Ç–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
   - –ü–æ–¥–¥–µ—Ä–∂–∫–∞ —ç–º–æ–¥–∑–∏ –∏ UTF-8

–í–ê–ñ–ù–û: –ì–µ–Ω–µ—Ä–∏—Ä—É–π –¢–û–õ–¨–ö–û –≥–æ—Ç–æ–≤—ã–π HTML –∫–æ–¥ –±–µ–∑ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –æ–±—ä—è—Å–Ω–µ–Ω–∏–π.
–ó–∞–º–µ–Ω–∏ {{NUMBER}} –Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ –Ω–æ–º–µ—Ä–∞ –≤–æ–ø—Ä–æ—Å–æ–≤.
–£–∫–∞–∂–∏ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã –≤ data-correct="[–Ω–æ–º–µ—Ä]" –¥–ª—è –∫–∞–∂–¥–æ–≥–æ quiz-container.

–¢–µ–º–∞: {topic}"""


class ArticleGenerator:
    """–û—Å–Ω–æ–≤–Ω–æ–π –∫–ª–∞—Å—Å –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Å—Ç–∞—Ç–µ–π"""
    
    def __init__(self, api_key: str, test_mode: bool = False):
        self.client = OpenRouterClient(api_key) if not test_mode else None
        self.test_mode = test_mode
        self.output_dir = Path("generated_articles")
        self.output_dir.mkdir(exist_ok=True)
    
    def generate_unique_filename(self, topic: str) -> str:
        """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —É–Ω–∏–∫–∞–ª—å–Ω–æ–µ –∏–º—è —Ñ–∞–π–ª–∞"""
        # –û—á–∏—â–∞–µ–º —Ç–µ–º—É –æ—Ç –Ω–µ–¥–æ–ø—É—Å—Ç–∏–º—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤
        clean_topic = "".join(c for c in topic if c.isalnum() or c in (' ', '-', '_')).strip()
        clean_topic = clean_topic.replace(' ', '_')[:50]  # –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –¥–ª–∏–Ω—É
        
        # –î–æ–±–∞–≤–ª—è–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–π —Å—É—Ñ—Ñ–∏–∫—Å
        unique_id = ''.join(random.choices(string.ascii_lowercase + string.digits, k=6))
        return f"article_{clean_topic}_{unique_id}.html"
    
    def generate_id_prefix(self) -> str:
        """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –ø—Ä–µ—Ñ–∏–∫—Å –¥–ª—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤"""
        return f"art_{uuid.uuid4().hex[:8]}"
    
    def process_html_content(self, html_content: str, id_prefix: str) -> str:
        """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç HTML –∫–æ–Ω—Ç–µ–Ω—Ç, –¥–æ–±–∞–≤–ª—è—è —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ ID"""
        # –ó–∞–º–µ–Ω—è–µ–º –æ–±—â–∏–µ ID –Ω–∞ —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ —Å –ø—Ä–µ—Ñ–∏–∫—Å–æ–º
        replacements = {
            'id="progress-bar"': f'id="{id_prefix}_progress_bar"',
            'id="quiz-result"': f'id="{id_prefix}_quiz_result"',
            'id="final-score"': f'id="{id_prefix}_final_score"',
            '"progress-bar"': f'"{id_prefix}_progress_bar"',
            '"quiz-result"': f'"{id_prefix}_quiz_result"',
            '"final-score"': f'"{id_prefix}_final_score"',
            "'progress-bar'": f"'{id_prefix}_progress_bar'",
            "'quiz-result'": f"'{id_prefix}_quiz_result'",
            "'final-score'": f"'{id_prefix}_final_score'"
        }
        
        for old, new in replacements.items():
            html_content = html_content.replace(old, new)
        
        return html_content
    
    def generate_article(self, topic: str) -> bool:
        """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —Å—Ç–∞—Ç—å—é –¥–ª—è –∑–∞–¥–∞–Ω–Ω–æ–π —Ç–µ–º—ã"""
        print(f"üîÑ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å—Ç–∞—Ç—å–∏ –¥–ª—è —Ç–µ–º—ã: {topic}")
        
        # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –ø—Ä–µ—Ñ–∏–∫—Å –∏ –∏–º—è —Ñ–∞–π–ª–∞
        id_prefix = self.generate_id_prefix()
        filename = self.generate_unique_filename(topic)
        filepath = self.output_dir / filename
        
        # –ü–æ–ª—É—á–∞–µ–º HTML –∫–æ–Ω—Ç–µ–Ω—Ç –æ—Ç API –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π
        if self.test_mode:
            html_content = self._get_test_html(topic, id_prefix)
        else:
            html_content = self.client.generate_article(topic)
            if not html_content:
                print(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å —Å—Ç–∞—Ç—å—é –¥–ª—è —Ç–µ–º—ã: {topic}")
                return False
        
        # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º HTML –∫–æ–Ω—Ç–µ–Ω—Ç
        processed_html = self.process_html_content(html_content, id_prefix)
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–∞–π–ª
        try:
            with open(filepath, 'w', encoding='utf-8') as f:
                f.write(processed_html)
            print(f"‚úÖ –°—Ç–∞—Ç—å—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞: {filepath}")
            return True
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Ñ–∞–π–ª–∞ {filepath}: {e}")
            return False
    
    def process_topics_file(self, topics_file: str) -> None:
        """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Ñ–∞–π–ª —Å —Ç–µ–º–∞–º–∏"""
        topics_path = Path(topics_file)
        if not topics_path.exists():
            print(f"‚ùå –§–∞–π–ª {topics_file} –Ω–µ –Ω–∞–π–¥–µ–Ω")
            return
        
        try:
            with open(topics_path, 'r', encoding='utf-8') as f:
                topics = [line.strip() for line in f if line.strip()]
            
            if not topics:
                print(f"‚ùå –§–∞–π–ª {topics_file} –ø—É—Å—Ç –∏–ª–∏ –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –≤–∞–ª–∏–¥–Ω—ã—Ö —Ç–µ–º")
                return
            
            print(f"üìã –ù–∞–π–¥–µ–Ω–æ {len(topics)} —Ç–µ–º –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏")
            
            successful = 0
            for i, topic in enumerate(topics, 1):
                print(f"\n[{i}/{len(topics)}] –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–º—ã: {topic}")
                if self.generate_article(topic):
                    successful += 1
                time.sleep(1)  # –ù–µ–±–æ–ª—å—à–∞—è –ø–∞—É–∑–∞ –º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏
            
            print(f"\nüéâ –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞: {successful}/{len(topics)} —Å—Ç–∞—Ç–µ–π —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ")
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ —Ñ–∞–π–ª–∞ {topics_file}: {e}")
    
    def _get_test_html(self, topic: str, id_prefix: str) -> str:
        """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —Ç–µ—Å—Ç–æ–≤—ã–π HTML –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã"""
        return f"""<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>{topic}</title>
    <style>
        .interactive-container {{
            max-width: 800px;
            margin: 0 auto;
            padding: 20px;
            font-family: Arial, sans-serif;
            line-height: 1.6;
        }}
        .chapter {{
            margin-bottom: 30px;
            padding: 20px;
            border: 1px solid #ddd;
            border-radius: 8px;
        }}
        .info-block, .date-box, .fact-box, .special-box {{
            margin: 15px 0;
            padding: 15px;
            border-radius: 6px;
            border-left: 4px solid;
        }}
        .info-block {{ background: #e3f2fd; border-left-color: #2196f3; }}
        .date-box {{ background: #fff3e0; border-left-color: #ff9800; }}
        .fact-box {{ background: #e8f5e8; border-left-color: #4caf50; }}
        .special-box {{ background: #fce4ec; border-left-color: #e91e63; }}
        .quiz-container {{
            margin: 20px 0;
            padding: 20px;
            background: #f5f5f5;
            border-radius: 8px;
        }}
        .quiz-options label {{
            display: block;
            margin: 10px 0;
            cursor: pointer;
        }}
        .progress-bar {{
            width: 100%;
            height: 20px;
            background: #ddd;
            border-radius: 10px;
            margin: 20px 0;
        }}
        .progress-fill {{
            height: 100%;
            background: #4caf50;
            border-radius: 10px;
            width: 0%;
            transition: width 0.3s;
        }}
        #quiz-result {{
            margin: 20px 0;
            padding: 15px;
            background: #e3f2fd;
            border-radius: 6px;
            display: none;
        }}
    </style>
</head>
<body>
    <div class="interactive-container">
        <h1>üìö {topic}</h1>
        
        <div class="progress-bar">
            <div class="progress-fill" id="progress-bar"></div>
        </div>
        
        <div class="chapter">
            <h2>–ì–ª–∞–≤–∞ 1: –í–≤–µ–¥–µ–Ω–∏–µ</h2>
            <p>–í–≤–æ–¥–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ —Ç–µ–º–µ "{topic}".</p>
            
            <div class="info-block">
                üìù <strong>–í–∞–∂–Ω–æ –∑–Ω–∞—Ç—å:</strong> –≠—Ç–æ –∫–ª—é—á–µ–≤–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è –ø–æ–Ω–∏–º–∞–Ω–∏—è —Ç–µ–º—ã.
            </div>
            
            <div class="date-box">
                üìÖ <strong>–ò–Ω—Ç–µ—Ä–µ—Å–Ω—ã–π —Ñ–∞–∫—Ç:</strong> –£–¥–∏–≤–∏—Ç–µ–ª—å–Ω—ã–µ –¥–µ—Ç–∞–ª–∏ –∏–∑ –∏—Å—Ç–æ—Ä–∏–∏ —Ä–∞–∑–≤–∏—Ç–∏—è.
            </div>
            
            <div class="fact-box">
                üî¢ <strong>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:</strong> –í–∞–∂–Ω—ã–µ —Ü–∏—Ñ—Ä—ã –∏ –¥–∞–Ω–Ω—ã–µ –ø–æ —Ç–µ–º–µ.
            </div>
            
            <div class="special-box">
                ‚≠ê <strong>–û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç—å:</strong> –£–Ω–∏–∫–∞–ª—å–Ω—ã–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ –∏ —Å–≤–æ–π—Å—Ç–≤–∞.
            </div>
            
            <div class="quiz-container" data-question="1" data-correct="0">
                <h4>–í–æ–ø—Ä–æ—Å 1</h4>
                <p>–¢–µ—Å—Ç–æ–≤—ã–π –≤–æ–ø—Ä–æ—Å –ø–æ –ø–µ—Ä–≤–æ–π –≥–ª–∞–≤–µ</p>
                <div class="quiz-options">
                    <label><input type="radio" name="q1" value="0"> –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç</label>
                    <label><input type="radio" name="q1" value="1"> –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç 1</label>
                    <label><input type="radio" name="q1" value="2"> –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç 2</label>
                    <label><input type="radio" name="q1" value="3"> –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç 3</label>
                </div>
            </div>
        </div>
        
        <div class="chapter">
            <h2>–ì–ª–∞–≤–∞ 2: –û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–Ω—Ü–µ–ø—Ü–∏–∏</h2>
            <p>–î–µ—Ç–∞–ª—å–Ω–æ–µ –∏–∑—É—á–µ–Ω–∏–µ –æ—Å–Ω–æ–≤–Ω—ã—Ö –∫–æ–Ω—Ü–µ–ø—Ü–∏–π —Ç–µ–º—ã "{topic}".</p>
            
            <div class="info-block">
                üìù <strong>–í–∞–∂–Ω–æ –∑–Ω–∞—Ç—å:</strong> –§—É–Ω–¥–∞–º–µ–Ω—Ç–∞–ª—å–Ω—ã–µ –ø—Ä–∏–Ω—Ü–∏–ø—ã –¥–ª—è –ø–æ–Ω–∏–º–∞–Ω–∏—è.
            </div>
            
            <div class="date-box">
                üìÖ <strong>–ò–Ω—Ç–µ—Ä–µ—Å–Ω—ã–π —Ñ–∞–∫—Ç:</strong> –ò—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–µ –º–æ–º–µ–Ω—Ç—ã —Ä–∞–∑–≤–∏—Ç–∏—è.
            </div>
            
            <div class="fact-box">
                üî¢ <strong>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:</strong> –¶–∏—Ñ—Ä—ã –∏ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è –ø–æ —Ç–µ–º–µ.
            </div>
            
            <div class="special-box">
                ‚≠ê <strong>–û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç—å:</strong> –°–ø–µ—Ü–∏—Ñ–∏—á–µ—Å–∫–∏–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ –æ–±–ª–∞—Å—Ç–∏.
            </div>
            
            <div class="quiz-container" data-question="2" data-correct="1">
                <h4>–í–æ–ø—Ä–æ—Å 2</h4>
                <p>–í–æ–ø—Ä–æ—Å –ø–æ –æ—Å–Ω–æ–≤–Ω—ã–º –∫–æ–Ω—Ü–µ–ø—Ü–∏—è–º</p>
                <div class="quiz-options">
                    <label><input type="radio" name="q2" value="0"> –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç 1</label>
                    <label><input type="radio" name="q2" value="1"> –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç</label>
                    <label><input type="radio" name="q2" value="2"> –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç 2</label>
                    <label><input type="radio" name="q2" value="3"> –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç 3</label>
                </div>
            </div>
        </div>
        
        <div id="quiz-result">
            <h3>–†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–∞</h3>
            <p>–í–∞—à —Ä–µ–∑—É–ª—å—Ç–∞—Ç: <span id="final-score">0</span> –∏–∑ 2 –ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤</p>
        </div>
        
        <button onclick="checkAnswers()" style="padding: 10px 20px; background: #4caf50; color: white; border: none; border-radius: 5px; cursor: pointer;">
            –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –æ—Ç–≤–µ—Ç—ã
        </button>
    </div>
    
    <script>
        let totalQuestions = 2;
        
        function updateProgress() {{
            const answered = document.querySelectorAll('input[type="radio"]:checked').length;
            const progress = (answered / totalQuestions) * 100;
            document.getElementById('progress-bar').style.width = progress + '%';
        }}
        
        function checkAnswers() {{
            let correct = 0;
            const quizContainers = document.querySelectorAll('.quiz-container');
            
            quizContainers.forEach(container => {{
                const questionNum = container.dataset.question;
                const correctAnswer = container.dataset.correct;
                const selectedAnswer = document.querySelector(`input[name="q${{questionNum}}"]:checked`);
                
                if (selectedAnswer && selectedAnswer.value === correctAnswer) {{
                    correct++;
                }}
            }});
            
            document.getElementById('final-score').textContent = correct;
            document.getElementById('quiz-result').style.display = 'block';
        }}
        
        // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
        document.addEventListener('change', function(e) {{
            if (e.target.type === 'radio') {{
                updateProgress();
            }}
        }});
    </script>
</body>
</html>"""


def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üöÄ –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã—Ö HTML —Å—Ç–∞—Ç–µ–π")
    print("=" * 50)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º API –∫–ª—é—á
    api_key = os.getenv('OPENROUTER_API_KEY')
    if not api_key:
        print("‚ùå –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –æ–∫—Ä—É–∂–µ–Ω–∏—è OPENROUTER_API_KEY –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞")
        print("–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –µ—ë –∫–æ–º–∞–Ω–¥–æ–π:")
        print("export OPENROUTER_API_KEY='sk-or-...'")
        print("–∏–ª–∏")
        print("$env:OPENROUTER_API_KEY='sk-or-...' (PowerShell)")
        sys.exit(1)
    
    # –°–æ–∑–¥–∞–µ–º –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä
    generator = ArticleGenerator(api_key)
    
    # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ñ–∞–π–ª —Å —Ç–µ–º–∞–º–∏
    topics_file = "topics.txt"
    generator.process_topics_file(topics_file)


if __name__ == "__main__":
    main()